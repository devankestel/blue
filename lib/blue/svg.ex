defmodule Blue.Svg do
  alias Blue.Sprite

  def header(canvas, designer_mode) do
    # we need to conditionally render the click event
    # or the keypress event based on which mode
    # we are in
    IO.inspect("render designer mode #{designer_mode}")
    event = case designer_mode do
      true -> 'phx-click="svg_click"'
      false -> 'phx-window-keydown="keypress"'
    end
    """
    <svg #{event}
    version="1.0"
    style="background-color: #F8F8F8"
    id="Layer_1"
    xmlns="http://www.w3.org/2000/svg"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    width="500" height="500"
    viewBox="0 0 #{canvas.width} #{canvas.height}"
    xml:space="preserve">
    """
  end

  def footer(), do: "</svg>"

  def square(canvas, sprite) do
    color_vector = Sprite.get_color_vector(sprite) |> Tuple.to_list() |> Enum.join(",")

    {x, y} = get_coordinate(canvas, sprite)
    """
    <rect
    x="#{x}" y="#{y}"
    style="fill:rgba(#{color_vector});"
    width="#{canvas.grid_size}" height="#{canvas.grid_size}"/>
    """
  end

  def ghost(canvas, sprite) do
    {gcx, gcy} = sprite.grid_coordinate
    IO.inspect("render ghost for sprite #{sprite.type} at #{gcx}, #{gcy}")
    {x, y} = get_coordinate(canvas, sprite)
    """
        <svg width="#{canvas.grid_size}px" height="#{canvas.grid_size}px" x="#{x}" y="#{y}" viewBox="0 0 58 59">
            <!-- Generator: Sketch 43.2 (39069) - http://www.bohemiancoding.com/sketch -->
            <desc>Created with Sketch.</desc>
            <defs></defs>
            <g id="jkl" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                <g id="ghost_svg_wikipedia" transform="translate(-1.000000, 0.000000)">
                    <path d="M58.05,30.6319355 C56.7890323,29.1648387 55.9674194,28.9780645 54.6629032,29.8683871 C54.0512903,30.2864516 53.0680645,30.9522581 50.5906452,30.8574194 C50.6729032,29.2596774 50.7512903,27.6087097 50.823871,25.8522581 C50.853871,25.1516129 50.8770968,24.6203226 50.8916129,24.2951613 C51.2322581,17.7590323 48.8235484,11.2693548 44.2858065,6.49064516 C40.3132258,2.30612903 35.2383871,-3.55271368e-15 29.9970968,-3.55271368e-15 C24.753871,-3.55271368e-15 19.6790323,2.30612903 15.7054839,6.49064516 C11.1687097,11.2693548 8.76096774,17.76 9.09967742,24.2951613 C9.11903226,24.6270968 9.14129032,25.1729032 9.16935484,25.8929032 C9.24096774,27.6270968 9.31935484,29.2567742 9.40064516,30.836129 C6.93290323,30.9348387 5.95258065,30.2758065 5.34387097,29.8616129 C4.04129032,28.9790323 3.21774194,29.163871 1.95096774,30.6377419 C0.959032258,31.7941935 0.701612903,33.3880645 1.24935484,35.0109677 C2.25096774,37.9819355 5.48516129,40.5464516 10.1632258,42.2080645 C10.89,50.366129 11.8374194,55.1119355 13.0587097,56.7948387 C13.6703226,57.6387097 14.4116129,58.0645161 15.2603226,58.0645161 C16.5319355,58.0645161 17.6758065,57.0851613 18.8874194,56.0477419 C20.1174194,54.9948387 21.3880645,53.906129 22.6490323,53.906129 C24.0570968,53.906129 24.7412903,54.6609677 25.6074194,55.6170968 C26.5558065,56.6622581 27.7335484,57.9629032 30.0019355,57.9629032 C32.2664516,57.9629032 33.4441935,56.6622581 34.3906452,55.6180645 C35.2567742,54.6619355 35.9409677,53.906129 37.3529032,53.906129 C38.61,53.906129 39.8796774,54.9948387 41.1106452,56.0477419 C42.3183871,57.0851613 43.4641935,58.0645161 44.7367742,58.0645161 C45.5854839,58.0645161 46.3248387,57.6377419 46.9345161,56.793871 C48.1577419,55.1032258 49.106129,50.3545161 49.8309677,42.1945161 C55.1922581,40.2619355 57.9483871,37.346129 58.7458065,34.9732258 C59.2954839,33.3367742 59.0487097,31.7941935 58.05,30.6319355 M56.9109677,34.3577419 C56.1416129,36.6454839 52.6751613,39.8719355 45.4383871,41.4348387 C44.9148387,41.5470968 44.583871,42.0619355 44.6951613,42.5845161 C44.793871,43.0383871 45.1945161,43.3480645 45.6406452,43.3480645 C45.7083871,43.3480645 45.7770968,43.3412903 45.8467742,43.3267742 C46.5406452,43.1767742 47.193871,43.0074194 47.8267742,42.8293548 C47.0254839,51.4025806 46.1070968,54.6377419 45.3667742,55.6596774 C45.026129,56.1290323 44.8093548,56.1290323 44.7377419,56.1290323 C44.1803226,56.1290323 43.2183871,55.3035484 42.3696774,54.5767742 C40.9422581,53.3545161 39.326129,51.9706452 37.3529032,51.9706452 C35.0825806,51.9706452 33.903871,53.2722581 32.9564516,54.3183871 C32.0903226,55.2725806 31.4080645,56.0274194 30.0019355,56.0274194 C28.5919355,56.0274194 27.9077419,55.2725806 27.0416129,54.3164516 C26.0941935,53.2712903 24.9154839,51.9706452 22.6490323,51.9706452 C20.673871,51.9706452 19.0558065,53.3554839 17.6283871,54.5767742 C16.7796774,55.3045161 15.8158065,56.1290323 15.2603226,56.1290323 C15.1887097,56.1290323 14.9690323,56.1290323 14.6274194,55.6587097 C13.89,54.6416129 12.9716129,51.4122581 12.1722581,42.8390323 C12.8129032,43.0170968 13.4680645,43.1816129 14.1493548,43.3277419 C14.2170968,43.3422581 14.2858065,43.3480645 14.3516129,43.3480645 C14.7996774,43.3480645 15.2003226,43.0374194 15.2990323,42.5816129 C15.4083871,42.0590323 15.0764516,41.5451613 14.5529032,41.4329032 C7.32290323,39.8922581 3.85645161,36.6774194 3.08516129,34.3925806 C2.85290323,33.7035484 2.72225806,32.7125806 3.42193548,31.8996774 C3.7316129,31.5396774 3.91354839,31.3741935 4.00935484,31.3006452 C4.08483871,31.346129 4.1816129,31.4119355 4.25903226,31.4651613 C5.3816129,32.2248387 7.47,33.6425806 14.0177419,32.0758065 C14.5374194,31.9509677 14.8587097,31.4293548 14.733871,30.9096774 C14.6090323,30.39 14.0893548,30.0706452 13.5677419,30.1935484 C12.7364516,30.3929032 12,30.5341935 11.3312903,30.6377419 C11.2529032,29.1125806 11.1774194,27.5206452 11.1067742,25.8125806 C11.0767742,25.0848387 11.0516129,24.5312903 11.0351613,24.1954839 C10.7235484,18.1867742 12.9387097,12.2196774 17.1116129,7.82322581 C20.7164516,4.02677419 25.2919355,1.93645161 29.9980645,1.93645161 C34.7022581,1.93645161 39.2806452,4.02677419 42.8845161,7.82322581 C47.0583871,12.2196774 49.2735484,18.1867742 48.9590323,24.1954839 C48.9416129,24.5254839 48.9212903,25.0635484 48.8932258,25.7729032 C48.8216129,27.506129 48.7441935,29.1183871 48.6658065,30.6629032 C48.0048387,30.5622581 47.2790323,30.423871 46.4612903,30.2303226 C45.9358065,30.1093548 45.42,30.4296774 45.2951613,30.9493548 C45.1722581,31.47 45.4954839,31.9906452 46.0151613,32.1145161 C52.5512903,33.656129 54.6358065,32.2335484 55.7564516,31.4670968 C55.833871,31.413871 55.9287097,31.3490323 56.0041935,31.3025806 C56.1009677,31.3780645 56.2780645,31.5406452 56.5809677,31.8929032 C57.2680645,32.6932258 57.1393548,33.6754839 56.9109677,34.3577419" id="Shape" fill="#6BFFD0" fill-rule="nonzero"></path>
                    <path d="M56.9109677,34.3577419 C56.1416129,36.6454839 52.6751613,39.8719355 45.4383871,41.4348387 C44.9148387,41.5470968 44.583871,42.0619355 44.6951613,42.5845161 C44.793871,43.0383871 45.1945161,43.3480645 45.6406452,43.3480645 C45.7083871,43.3480645 45.7770968,43.3412903 45.8467742,43.3267742 C46.5406452,43.1767742 47.193871,43.0074194 47.8267742,42.8293548 C47.0254839,51.4025806 46.1070968,54.6377419 45.3667742,55.6596774 C45.026129,56.1290323 44.8093548,56.1290323 44.7377419,56.1290323 C44.1803226,56.1290323 43.2183871,55.3035484 42.3696774,54.5767742 C40.9422581,53.3545161 39.326129,51.9706452 37.3529032,51.9706452 C35.0825806,51.9706452 33.903871,53.2722581 32.9564516,54.3183871 C32.0903226,55.2725806 31.4080645,56.0274194 30.0019355,56.0274194 C28.5919355,56.0274194 27.9077419,55.2725806 27.0416129,54.3164516 C26.0941935,53.2712903 24.9154839,51.9706452 22.6490323,51.9706452 C20.673871,51.9706452 19.0558065,53.3554839 17.6283871,54.5767742 C16.7796774,55.3045161 15.8158065,56.1290323 15.2603226,56.1290323 C15.1887097,56.1290323 14.9690323,56.1290323 14.6274194,55.6587097 C13.89,54.6416129 12.9716129,51.4122581 12.1722581,42.8390323 C12.8129032,43.0170968 13.4680645,43.1816129 14.1493548,43.3277419 C14.2170968,43.3422581 14.2858065,43.3480645 14.3516129,43.3480645 C14.7996774,43.3480645 15.2003226,43.0374194 15.2990323,42.5816129 C15.4083871,42.0590323 15.0764516,41.5451613 14.5529032,41.4329032 C7.32290323,39.8922581 3.85645161,36.6774194 3.08516129,34.3925806 C2.85290323,33.7035484 2.72225806,32.7125806 3.42193548,31.8996774 C3.7316129,31.5396774 3.91354839,31.3741935 4.00935484,31.3006452 C4.08483871,31.346129 4.1816129,31.4119355 4.25903226,31.4651613 C5.3816129,32.2248387 7.47,33.6425806 14.0177419,32.0758065 C14.5374194,31.9509677 14.8587097,31.4293548 14.733871,30.9096774 C14.6090323,30.39 14.0893548,30.0706452 13.5677419,30.1935484 C12.7364516,30.3929032 12,30.5341935 11.3312903,30.6377419 C11.2529032,29.1125806 11.1774194,27.5206452 11.1067742,25.8125806 C11.0767742,25.0848387 11.0516129,24.5312903 11.0351613,24.1954839 C10.7235484,18.1867742 12.9387097,12.2196774 17.1116129,7.82322581 C20.7164516,4.02677419 25.2919355,1.93645161 29.9980645,1.93645161 C34.7022581,1.93645161 39.2806452,4.02677419 42.8845161,7.82322581 C47.0583871,12.2196774 49.2735484,18.1867742 48.9590323,24.1954839 C48.9416129,24.5254839 48.9212903,25.0635484 48.8932258,25.7729032 C48.8216129,27.506129 48.7441935,29.1183871 48.6658065,30.6629032 C48.0048387,30.5622581 47.2790323,30.423871 46.4612903,30.2303226 C45.9358065,30.1093548 45.42,30.4296774 45.2951613,30.9493548 C45.1722581,31.47 45.4954839,31.9906452 46.0151613,32.1145161 C52.5512903,33.656129 54.6358065,32.2335484 55.7564516,31.4670968 C55.833871,31.413871 55.9287097,31.3490323 56.0041935,31.3025806 C56.1009677,31.3780645 56.2780645,31.5406452 56.5809677,31.8929032 C57.2680645,32.6932258 57.1393548,33.6754839 56.9109677,34.3577419" id="body" fill="#6BD06B"></path>
                    <path d="M39.0996774,14.2325806 C35.4619355,14.2325806 32.5035484,17.5345161 32.5035484,21.5932258 C32.5035484,25.6490323 35.4629032,28.9490323 39.0996774,28.9490323 C42.7383871,28.9490323 45.6977419,25.65 45.6977419,21.5932258 C45.6987097,17.5345161 42.7383871,14.2325806 39.0996774,14.2325806 M39.0996774,27.4974194 C36.2622581,27.4974194 33.9551613,24.8496774 33.9551613,21.5932258 C33.9551613,18.3348387 36.2632258,15.6841935 39.0996774,15.6841935 C41.9380645,15.6841935 44.246129,18.3348387 44.246129,21.5932258 C44.2470968,24.8496774 41.9380645,27.4974194 39.0996774,27.4974194" id="Shape" fill="#FF6B6B" fill-rule="nonzero"></path>
                    <path d="M39.0996774,27.4974194 C36.2622581,27.4974194 33.9551613,24.8496774 33.9551613,21.5932258 C33.9551613,18.3348387 36.2632258,15.6841935 39.0996774,15.6841935 C41.9380645,15.6841935 44.246129,18.3348387 44.246129,21.5932258 C44.2470968,24.8496774 41.9380645,27.4974194 39.0996774,27.4974194" id="white_of_right_eye" fill="#FFFD81"></path>
                    <path d="M39.0996774,17.2364516 C36.9716129,17.2364516 35.2441935,19.1825806 35.2441935,21.5903226 C35.2441935,23.9941935 36.9716129,25.946129 39.0996774,25.946129 C41.2277419,25.946129 42.9532258,23.9941935 42.9532258,21.5903226 C42.9541935,19.1816129 41.2287097,17.2364516 39.0996774,17.2364516" id="pupil_of_right_eye" fill="#80ACFF" fill-rule="nonzero"></path>
                    <path d="M32.1880645,19.6316129 C32.1880645,14.3525806 28.1758065,10.0577419 23.2422581,10.0577419 C18.3116129,10.0577419 14.3003226,14.3525806 14.3003226,19.6316129 C14.3003226,24.9048387 18.3125806,29.1948387 23.2422581,29.1948387 C28.1748387,29.1948387 32.1880645,24.9048387 32.1880645,19.6316129 M15.7509677,19.6316129 C15.7509677,15.1529032 19.1119355,11.5093548 23.2412903,11.5093548 C27.3745161,11.5093548 30.7354839,15.1529032 30.7354839,19.6316129 C30.7354839,24.1045161 27.3735484,27.7432258 23.2412903,27.7432258 C19.1119355,27.7432258 15.7509677,24.1045161 15.7509677,19.6316129" id="Shape" fill="#FF6B6B" fill-rule="nonzero"></path>
                    <path d="M15.7509677,19.6316129 C15.7509677,15.1529032 19.1119355,11.5093548 23.2412903,11.5093548 C27.3745161,11.5093548 30.7354839,15.1529032 30.7354839,19.6316129 C30.7354839,24.1045161 27.3735484,27.7432258 23.2412903,27.7432258 C19.1119355,27.7432258 15.7509677,24.1045161 15.7509677,19.6316129" id="white_of_left_eye" fill="#FFFD81"></path>
                    <path d="M28.6403226,19.6258065 C28.6403226,16.4158065 26.2229032,13.8193548 23.2422581,13.8193548 C20.2616129,13.8193548 17.846129,16.4158065 17.846129,19.6258065 C17.846129,22.8329032 20.2616129,25.4322581 23.2422581,25.4322581 C26.2229032,25.4322581 28.6403226,22.833871 28.6403226,19.6258065" id="pupil_of_left_eye" fill="#80ACFF" fill-rule="nonzero"></path>
                    <path d="M18.9909677,32.2906452 C18.9909677,34.4564516 20.3641935,36.4548387 22.56,37.8967742 C22.4758065,38.5751613 22.4748387,39.4306452 22.4748387,40.4893548 C22.4748387,45.783871 25.6964516,49.2048387 30.6832258,49.2048387 C35.6709677,49.2048387 38.8935484,45.783871 38.8935484,40.4854839 C38.8935484,39.33 38.8925806,38.5141935 38.8180645,37.8919355 C41.0070968,36.4490323 42.3774194,34.4535484 42.3774194,32.2906452 C42.3774194,32.2906452 36.8090323,33.5332258 30.6832258,33.5332258 C24.5574194,33.5332258 18.9909677,32.2906452 18.9909677,32.2906452 M30.6832258,47.7532258 C27.416129,47.7532258 23.9264516,45.8448387 23.9264516,40.4893548 C23.9264516,37.2919355 23.9264516,37.2919355 24.9822581,37.2919355 C25.3877419,37.2919355 25.8880645,37.3258065 26.5054839,37.3674194 C27.2932258,37.4206452 28.316129,37.4864516 29.5683871,37.5145161 L30.6832258,45.9222581 L31.7980645,37.5145161 C33.0512903,37.4864516 34.076129,37.4196774 34.863871,37.3674194 C35.4822581,37.3258065 35.9816129,37.2919355 36.3870968,37.2919355 C37.166129,37.2919355 37.2135484,37.413871 37.2687097,37.5551613 C37.4419355,37.9954839 37.4419355,38.9864516 37.4419355,40.4883871 C37.4419355,45.8448387 33.9503226,47.7532258 30.6832258,47.7532258" id="Shape" fill="#FF6B6B" fill-rule="nonzero"></path>
                    <path d="M30.6832258,47.7532258 C27.416129,47.7532258 23.9264516,45.8448387 23.9264516,40.4893548 C23.9264516,37.2919355 23.9264516,37.2919355 24.9822581,37.2919355 C25.3877419,37.2919355 25.8880645,37.3258065 26.5054839,37.3674194 C27.2932258,37.4206452 28.316129,37.4864516 29.5683871,37.5145161 L30.6832258,45.9222581 L31.7980645,37.5145161 C33.0512903,37.4864516 34.076129,37.4196774 34.863871,37.3674194 C35.4822581,37.3258065 35.9816129,37.2919355 36.3870968,37.2919355 C37.166129,37.2919355 37.2135484,37.413871 37.2687097,37.5551613 C37.4419355,37.9954839 37.4419355,38.9864516 37.4419355,40.4883871 C37.4419355,45.8448387 33.9503226,47.7532258 30.6832258,47.7532258" id="Path" fill="#FFD081"></path>
                </g>
            </g>
        </svg>
    """
  end

  def coin(canvas, sprite) do
    {gcx, gcy} = sprite.grid_coordinate
    IO.inspect("render coin for sprite #{sprite.type} at #{gcx}, #{gcy}")
    {x, y} = get_coordinate(canvas, sprite)
    """
        <svg width="#{canvas.grid_size}px" height="#{canvas.grid_size}px" x="#{x}" y="#{y}" viewBox="0 0 511 511">
            <g transform="translate(255.500000, 255.500000) rotate(90.000000) translate(-255.500000, -255.500000) " fill-rule="nonzero">
                <path d="M408.58,65.649 C491.888,148.957 482.343,293.012 386.885,387.602 C292.295,482.192 147.373,491.738 64.932,409.297 C-17.509,326.856 -7.962,181.933 86.628,86.476 C182.085,-8.114 326.14,-17.66 408.58,65.649 L408.58,65.649 Z" id="Shape" fill="#D0E8F9"></path>
                <path d="M206.384,473.513 C150.845,473.513 98.777,454.421 58.859,414.503 C17.204,372.849 -3.623,314.706 0.716,251.357 C5.055,188.876 33.692,128.13 80.553,80.401 C128.282,33.54 189.028,4.903 251.509,0.564 C314.858,-3.775 373.001,17.052 414.655,58.706 C500.567,144.618 491.021,294.747 392.96,392.808 C340.892,446.611 272.336,473.513 206.384,473.513 Z M267.997,17.052 C262.79,17.052 258.451,17.052 253.244,17.92 C194.234,21.391 136.96,48.293 92.702,92.55 C48.444,136.807 21.543,194.083 18.072,253.093 C13.733,311.235 32.825,364.171 71.875,402.354 C151.712,482.191 290.56,472.646 381.678,380.659 C472.797,289.54 482.342,150.693 403.373,70.856 C367.794,36.144 320.065,17.052 267.997,17.052 Z" id="Shape" fill="#0096E6"></path>
                <path d="M387.753,387.601 C300.106,475.248 169.936,490.001 84.892,425.784 C90.099,432.726 95.306,439.669 102.248,445.743 C185.556,529.051 329.611,519.506 424.201,424.048 C518.791,329.458 528.337,184.536 445.896,102.095 C439.821,96.02 432.879,89.946 425.937,84.739 C490.153,169.784 475.401,299.954 387.753,387.601 L387.753,387.601 Z" id="Shape" fill="#FFFFFF"></path>
                <path d="M243.699,510.828 C186.424,510.828 135.224,490.001 96.174,451.818 C90.099,445.743 84.025,438.801 77.95,430.991 L90.099,418.842 C172.54,481.323 297.502,464.835 380.811,380.659 C464.119,297.35 480.608,171.52 418.994,89.947 L431.143,77.798 C438.953,83.873 445.896,89.079 451.97,96.022 C493.624,137.676 514.451,195.819 510.112,259.168 C505.773,322.517 477.136,383.263 430.275,430.124 C382.546,477.853 321.8,505.622 259.319,509.961 C254.112,510.828 248.906,510.828 243.699,510.828 Z M136.96,463.099 C171.672,485.662 213.326,496.075 258.452,493.472 C317.462,489.133 373.869,463.099 418.127,418.842 C462.385,374.585 489.286,317.31 492.758,259.167 C495.361,214.042 484.948,172.387 462.385,137.675 C490.155,220.983 464.988,322.516 392.961,394.543 L392.961,394.543 C321.801,465.703 220.268,490.869 136.96,463.099 Z" id="Shape" fill="#0096E6"></path>
                <path d="M399.902,375.452 L435.482,411.032" id="Shape" fill="#D0E8F9"></path>
                <path d="M435.482,419.71 C432.879,419.71 431.143,418.842 429.407,417.107 L393.827,381.527 C390.356,378.056 390.356,372.849 393.827,369.378 C397.298,365.907 402.505,365.907 405.976,369.378 L441.556,404.958 C445.027,408.429 445.027,413.636 441.556,417.107 C439.821,418.842 438.085,419.71 435.482,419.71 Z" id="Shape" fill="#0096E6"></path>
                <path d="M368.662,404.957 L405.109,441.404" id="Shape" fill="#D0E8F9"></path>
                <path d="M405.109,450.083 C402.506,450.083 400.77,449.215 399.034,447.48 L362.587,411.033 C359.116,407.562 359.116,402.355 362.587,398.884 C366.058,395.413 371.265,395.413 374.736,398.884 L411.183,435.331 C414.654,438.802 414.654,444.009 411.183,447.48 C409.448,449.215 407.712,450.083 405.109,450.083 Z" id="Shape" fill="#0096E6"></path>
                <path d="M425.936,339.872 L462.383,376.319" id="Shape" fill="#D0E8F9"></path>
                <path d="M462.384,384.998 C459.781,384.998 458.045,384.13 456.309,382.395 L419.862,345.948 C416.391,342.477 416.391,337.27 419.862,333.799 C423.333,330.328 428.54,330.328 432.011,333.799 L468.458,370.246 C471.929,373.717 471.929,378.924 468.458,382.395 C466.723,384.13 464.987,384.998 462.384,384.998 Z" id="Shape" fill="#0096E6"></path>
                <path d="M446.763,299.086 L483.21,335.533" id="Shape" fill="#D0E8F9"></path>
                <path d="M483.211,345.079 C480.608,345.079 478.872,344.211 477.136,342.476 L440.689,306.029 C437.218,302.558 437.218,297.351 440.689,293.88 C444.16,290.409 449.367,290.409 452.838,293.88 L489.285,330.327 C492.756,333.798 492.756,339.005 489.285,342.476 C487.55,344.211 485.814,345.079 483.211,345.079 Z" id="Shape" fill="#0096E6"></path>
                <path d="M332.214,430.123 L368.661,466.57" id="Shape" fill="#D0E8F9"></path>
                <path d="M369.529,476.116 C366.926,476.116 365.19,475.248 363.454,473.513 L327.007,437.066 C323.536,433.595 323.536,428.388 327.007,424.917 C330.478,421.446 335.685,421.446 339.156,424.917 L375.603,461.364 C379.074,464.835 379.074,470.042 375.603,473.513 C373.868,475.249 371.265,476.116 369.529,476.116 Z" id="Shape" fill="#0096E6"></path>
                <path d="M290.56,450.083 L327.007,486.53" id="Shape" fill="#D0E8F9"></path>
                <path d="M327.007,495.208 C324.404,495.208 322.668,494.34 320.932,492.605 L284.485,456.158 C281.014,452.687 281.014,447.48 284.485,444.009 C287.956,440.538 293.163,440.538 296.634,444.009 L333.081,480.456 C336.552,483.927 336.552,489.134 333.081,492.605 C332.214,494.34 329.611,495.208 327.007,495.208 Z" id="Shape" fill="#0096E6"></path>
                <path d="M230.682,463.967 L267.129,500.414" id="Shape" fill="#D0E8F9"></path>
                <path d="M267.997,509.961 C265.394,509.961 263.658,509.093 261.922,507.358 L224.607,470.043 C221.136,466.572 221.136,461.365 224.607,457.894 C228.078,454.423 233.285,454.423 236.756,457.894 L273.203,494.341 C276.674,497.812 276.674,503.019 273.203,506.49 C272.336,509.093 269.733,509.961 267.997,509.961 Z" id="Shape" fill="#0096E6"></path>
                <path d="M167.333,462.232 L203.78,498.679" id="Shape" fill="#D0E8F9"></path>
                <path d="M203.78,507.357 C201.177,507.357 199.441,506.489 197.705,504.754 L161.258,468.307 C157.787,464.836 157.787,459.629 161.258,456.158 C164.729,452.687 169.936,452.687 173.407,456.158 L209.854,492.605 C213.325,496.076 213.325,501.283 209.854,504.754 C208.987,506.489 206.384,507.357 203.78,507.357 Z" id="Shape" fill="#0096E6"></path>
                <path d="M462.384,241.811 L498.831,278.258" id="Shape" fill="#D0E8F9"></path>
                <path d="M499.699,286.937 C497.096,286.937 495.36,286.069 493.624,284.334 L457.177,247.887 C453.706,244.416 453.706,239.209 457.177,235.738 C460.648,232.267 465.855,232.267 469.326,235.738 L505.773,272.185 C509.244,275.656 509.244,280.863 505.773,284.334 C504.038,286.069 501.435,286.937 499.699,286.937 Z" id="Shape" fill="#0096E6"></path>
                <path d="M464.119,181.933 L500.566,218.38" id="Shape" fill="#D0E8F9"></path>
                <g transform="translate(53.000000, 52.000000)" fill="#0096E6">
                    <path d="M447.567,175.059 C444.964,175.059 443.228,174.191 441.492,172.456 L405.045,136.009 C401.574,132.538 401.574,127.331 405.045,123.86 C408.516,120.389 413.723,120.389 417.194,123.86 L453.641,160.307 C457.112,163.778 457.112,168.985 453.641,172.456 C451.906,174.191 450.17,175.059 447.567,175.059 Z" id="Shape"></path>
                    <path d="M161.194,369.445 C155.987,369.445 152.516,365.974 152.516,360.767 C152.516,355.56 155.987,352.089 161.194,352.089 C166.401,352.089 172.475,352.089 177.682,351.221 C182.889,351.221 186.36,353.824 187.228,359.031 C188.096,363.37 184.625,367.709 179.418,368.577 C173.343,368.577 167.268,369.445 161.194,369.445 L161.194,369.445 Z M110.862,361.635 L108.259,361.635 C102.184,359.899 96.978,357.296 90.903,354.693 C86.564,352.957 84.828,347.751 86.564,343.412 C88.3,339.073 93.506,337.337 97.845,339.073 C103.052,341.676 107.391,343.412 112.598,345.148 C116.937,346.884 119.54,351.223 117.805,356.429 C117.804,359.032 114.333,361.635 110.862,361.635 Z M228.882,356.428 C225.411,356.428 221.94,354.692 221.072,351.221 C219.336,346.882 221.94,341.675 226.279,339.94 C231.486,338.204 236.693,335.601 241.032,332.998 C245.371,331.262 250.578,332.998 252.313,337.337 C254.049,341.676 252.313,346.883 247.974,348.618 C242.767,351.221 236.693,353.825 231.486,355.56 C230.618,355.56 229.75,356.428 228.882,356.428 Z M51.851,326.055 C50.115,326.055 47.512,325.187 45.776,323.452 L51.851,317.377 L45.776,323.452 C41.437,319.113 37.098,314.774 33.627,309.567 C31.024,306.096 31.024,300.021 35.363,297.418 C38.834,294.815 44.909,294.815 47.512,299.154 C50.983,303.493 54.454,306.964 57.926,311.303 C61.397,314.774 61.397,319.981 57.926,323.452 C56.19,325.188 54.455,326.055 51.851,326.055 Z M287.024,320.849 C284.421,320.849 281.817,319.981 280.082,317.378 C276.611,313.907 277.479,307.832 280.95,305.229 C285.289,301.758 288.76,298.287 293.099,293.948 C296.57,290.477 301.777,290.477 305.248,293.948 C308.719,297.419 308.719,302.626 305.248,306.097 L305.248,306.097 C300.909,310.436 296.57,313.907 292.231,318.246 C291.363,319.981 289.628,320.849 287.024,320.849 Z M331.282,268.781 C329.546,268.781 327.811,268.781 326.943,267.913 C322.604,265.31 321.736,260.103 324.34,255.764 C326.943,251.425 329.547,246.218 332.15,241.011 C333.886,236.672 339.092,234.936 343.431,236.672 C347.77,238.408 349.506,243.614 347.77,247.953 C345.167,253.16 342.563,258.367 339.092,263.573 C337.357,267.045 334.753,268.781 331.282,268.781 Z M16.272,267.913 C12.801,267.913 9.33,265.31 7.594,261.838 C5.858,255.763 4.123,250.557 3.255,244.482 C2.387,240.143 4.991,234.936 10.197,234.068 C15.404,233.2 19.743,235.804 20.611,241.01 C21.479,246.217 23.214,251.424 24.95,256.63 C26.686,260.969 24.082,266.176 19.743,267.911 C18.007,267.913 17.14,267.913 16.272,267.913 Z M356.448,204.564 L354.712,204.564 C350.373,203.696 346.902,199.357 347.77,194.15 C348.638,188.943 349.506,183.736 350.373,177.662 C351.241,173.323 354.712,168.984 359.919,169.852 C364.258,170.72 368.597,174.191 367.729,179.398 C366.861,185.473 365.993,191.547 365.126,197.622 C364.258,201.96 360.787,204.564 356.448,204.564 Z M9.329,200.225 L9.329,200.225 C4.122,199.357 0.651,195.886 0.651,190.679 C1.519,184.604 2.387,178.53 3.254,172.455 C4.122,168.116 8.461,164.645 13.668,165.513 C18.007,166.381 21.478,170.72 20.61,175.927 C19.742,181.134 18.874,186.341 18.007,192.415 C18.007,196.754 13.668,200.225 9.329,200.225 Z M356.448,136.008 C352.109,136.008 348.638,133.405 347.77,129.066 C346.902,123.859 345.167,118.652 343.431,113.446 C341.695,109.107 344.299,103.9 348.638,102.165 C352.977,100.43 358.184,103.033 359.919,107.372 C361.655,113.447 363.39,118.653 364.258,124.728 C365.126,129.067 362.522,134.274 357.316,135.142 C357.316,136.008 356.448,136.008 356.448,136.008 Z M28.421,134.272 C27.553,134.272 25.818,134.272 24.95,133.404 C20.611,131.668 18.875,126.462 20.611,122.123 C23.214,116.916 25.818,111.709 29.289,106.503 C31.892,102.164 37.099,101.296 41.438,103.9 C45.777,106.503 46.645,111.71 44.041,116.049 C41.438,119.52 38.834,124.727 36.231,129.066 C34.495,132.537 31.892,134.272 28.421,134.272 Z M68.34,77.866 C65.737,77.866 64.001,76.998 62.265,75.263 C58.794,71.792 58.794,66.585 62.265,63.114 L62.265,63.114 C66.604,58.775 70.943,55.304 75.282,50.965 C78.753,47.494 84.828,48.362 87.431,51.833 C90.902,55.304 90.034,61.379 86.563,63.982 C82.224,67.453 78.753,70.924 74.414,75.263 C72.679,76.998 70.943,77.866 68.34,77.866 Z M327.811,74.394 C325.208,74.394 322.604,73.526 320.869,70.923 C317.398,66.584 313.927,62.245 310.455,58.774 L316.53,52.699 L322.605,46.624 L316.53,52.699 L322.605,46.624 C326.944,50.963 331.283,55.302 334.754,60.509 C337.357,63.98 337.357,70.055 333.018,72.658 C331.282,73.527 329.546,74.394 327.811,74.394 Z M123.879,37.947 C120.408,37.947 117.804,36.211 116.069,32.74 C114.333,28.401 116.069,23.194 120.408,21.459 C125.615,18.856 131.689,16.252 136.896,14.517 C141.235,12.781 146.442,15.385 148.177,19.724 C149.913,24.063 147.309,29.27 142.97,31.005 C137.763,32.741 132.556,35.344 128.217,37.947 L123.879,37.947 Z M274.007,31.872 C273.139,31.872 271.404,31.872 270.536,31.004 C265.329,28.401 260.99,26.665 255.783,24.929 C251.444,23.193 248.841,18.854 250.576,13.648 C252.312,8.441 256.651,6.706 261.857,8.441 C267.932,10.177 273.138,12.78 279.213,15.383 C283.552,17.119 285.288,22.325 283.552,26.664 C280.082,30.137 276.611,31.872 274.007,31.872 Z M189.831,18.855 C185.492,18.855 182.021,15.384 181.153,11.045 C180.285,6.706 183.756,2.367 188.963,1.499 C195.038,0.631 201.112,0.631 207.187,0.631 L207.187,0.631 C212.394,0.631 215.865,4.102 215.865,9.309 C215.865,14.516 212.394,17.987 207.187,17.987 C201.98,17.987 195.906,17.987 190.699,18.855 L189.831,18.855 Z" id="Shape"></path>
                </g>
            </g>
        </svg>
    """
  end

  def lemon(canvas, sprite) do
    {gcx, gcy} = sprite.grid_coordinate
    IO.inspect("render lemon for sprite #{sprite.type} at #{gcx}, #{gcy}")

    {x, y} = get_coordinate(canvas, sprite)

    """
        <svg width="#{canvas.grid_size}px" height="#{canvas.grid_size}px" x="#{x}" y="#{y}" viewBox="0 0 512 394">
            <g transform="translate(256.000000, 197.000000) rotate(-90.000000) translate(-256.000000, -197.000000) translate(59.000000, -59.000000)" fill-rule="nonzero">
                <path d="M393.541,261.129 C393.541,160.206 329.56,75.59 243.418,52.844 C243.672,50.869 243.817,48.859 243.817,46.815 C243.816,20.961 222.856,0 197.001,0 C171.146,0 150.185,20.961 150.185,46.817 C150.185,48.861 150.33,50.871 150.584,52.846 C64.441,75.592 0.459,160.206 0.459,261.129 C0.459,361.973 64.34,446.534 150.38,469.36 C152.496,493.256 172.555,511.995 197.001,511.995 C221.447,511.995 241.506,493.256 243.622,469.36 C329.66,446.534 393.541,361.973 393.541,261.129 Z" id="Shape" fill="#F4DE3B"></path>
                <path d="M197.004,512 C172.558,512 152.501,493.252 150.383,469.357 C64.341,446.528 0.46,361.974 0.46,261.136 C0.46,160.208 64.443,75.59 150.589,52.85 C150.332,50.874 150.178,48.859 150.178,46.819 C150.178,20.961 171.146,0.006 197.004,0.006 C188.047,0.006 180.784,20.962 180.784,46.819 C180.784,48.859 180.835,50.874 180.925,52.85 C151.102,75.589 128.94,160.207 128.94,261.136 C128.94,361.975 151.063,446.528 180.861,469.358 C181.593,493.252 188.535,512 197.004,512 Z" id="Shape" fill="#D6BD27"></path>
            </g>
        </svg>
    """
  end

  def brick(canvas, sprite) do
    {gcx, gcy} = sprite.grid_coordinate
    IO.inspect("render brick for sprite #{sprite.type} at #{gcx}, #{gcy}")
    {x, y} = get_coordinate(canvas, sprite)

    """
        <svg width="#{canvas.grid_size}px" height="#{canvas.grid_size}px" x="#{x}" y="#{y}" viewBox="0 0 512 512">
            <rect fill="#FFAD61" x="10.199" y="10.199" width="491.602" height="491.602"></rect>
            <g fill="#534741">
                <path d="M501.801,0 L10.199,0 C4.567,0 0,4.566 0,10.199 L0,501.801 C0,507.434 4.567,512 10.199,512 L501.801,512 C507.433,512 512,507.434 512,501.801 L512,10.199 C512,4.566 507.433,0 501.801,0 Z M144.489,245.801 L144.489,144.829 L367.511,144.829 L367.511,245.801 L144.489,245.801 Z M367.511,388.25 L367.511,491.602 L144.489,491.602 L144.489,388.25 L367.511,388.25 Z M20.398,367.852 L20.398,266.199 L246.14,266.199 L246.14,367.851 L20.398,367.851 L20.398,367.852 Z M20.398,245.801 L20.398,144.829 L124.09,144.829 L124.09,245.801 L20.398,245.801 Z M387.909,144.829 L491.601,144.829 L491.601,245.801 L387.909,245.801 L387.909,144.829 Z M491.602,124.43 L266.539,124.43 L266.539,20.398 L491.602,20.398 L491.602,124.43 Z M246.14,20.398 L246.14,124.43 L20.398,124.43 L20.398,20.398 L246.14,20.398 Z M20.398,388.25 L124.09,388.25 L124.09,491.602 L20.398,491.602 L20.398,388.25 Z M387.909,491.602 L387.909,388.25 L421.227,388.25 C426.859,388.25 431.426,383.684 431.426,378.051 C431.426,372.418 426.859,367.852 421.227,367.852 L266.539,367.852 L266.539,266.199 L491.602,266.199 L491.602,491.601 L387.909,491.601 L387.909,491.602 Z" id="Shape"></path>
                <path d="M464.064,367.852 L457.944,367.852 C452.312,367.852 447.745,372.418 447.745,378.051 C447.745,383.684 452.312,388.25 457.944,388.25 L464.064,388.25 C469.696,388.25 474.263,383.684 474.263,378.051 C474.263,372.418 469.696,367.852 464.064,367.852 Z" id="Shape"></path>
            </g>
        </svg>
    """
  end

  def get_coordinate(canvas, sprite) do
    {col, row} = sprite.grid_coordinate
    {(col-1)*canvas.grid_size, (row-1)*canvas.grid_size}
  end

  def get_grid_coordinate(coordinate, canvas) do
    {x, y} = coordinate
    col = (x/canvas.grid_size)
    |> ceil()

    row = (y/canvas.grid_size)
    |> ceil()

    {col, row}
  end

end
